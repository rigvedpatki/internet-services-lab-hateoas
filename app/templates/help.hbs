<h2>Stepwise tutorial for using the Graphical HATEOAS API Creator</h2>

<div class="panel panel-primary" id="pnlh">
  <h3>APIs</h3>
  <ol>
    <li>Start by creating a new API</li>
    <ol>
      <li>Click the "Add API"- button in the top bar</li>
      <li>Select the Protocol for the API (http/https) and write the domain and optional Base path</li>
      <li>Give the API a name, description and License information, if needed</li>
      <li>Finally, select the Authentication Protocol</li>
      <li>The API information can be accessed by clicking the Endpoint URL in top navigation bar</li>
      <li>You can switch between APIs through the "Your APIs"- link in the top navigation bar</li>
      <li>The API can be deleted by clicking the "Remove"- button to the right of Protocol. This will remove all resources and Entities related to this API.</li>
    </ol>
  </ol>
</div>

<div class="panel panel-primary" id="pnlh1">
  <h3>Resources & Methods</h3>
  <ol start="2">
    <li>To continue, create a new Resource</li>
    <ol>
      <li>Click the "Add"- button on the left Sidebar</li>
      <li>Define the path and description for the Resource</li>
      <li>Deleting the Resource will also permanently delete all Methods</li>
      <li>All the Resources for the current API can be seen on the left sidebar. Clicking one will open that Resource in the Main view</li>
    </ol>
    <li>Create a new Method for the newly-created Resource</li>
    <ol>
      <li>Open a Resource</li>
      <li>Click the "Add Method"- button to create a new Method</li>
      <li>Select the HTTP-method and give a description</li>
      <li>Removing a method will remove all Link Relations, Query Parameters and Responses associated to that Method</li>
      <li>Method can be hidden by clicking its name in the Main view. Another click will show the Method again</li>
      <li>Each method is shown under "Method"- header in the main view for the opened Resource</li>
      <li>Methods are also shown under the Resource it belongs to in the left Sidebar</li>
    </ol>
  </ol>
</div>

<div class="panel panel-primary" id="pnlh2">
  <h3>Link Relations, Query Parameters & Responses</h3>
  <ol start="4">
    <li>Create a Link Relation</li>
    <ol>
      <li>Open the newly-created Method</li>
      <li>Click the "Add"- button under "Link Relations"- header</li>,
      <li>Select the Link Relation Type</li>
      <ul>
        <li>Registered is defined by IANA-REL or MF-REL</li>
        <li>Self-Registered allows the creation of own Link Relation types, but they may not be recognized by others</li>
      </ul>
      <li>Select the rel- attribute</li>
      <ul>
        <li>If Link Relation Type is Registered, this can be selected from a list. A short description of the Rel-attribute is shown under the dropdown list</li>
        <li>If Link Relation Type is Self-Registered, a URL to the definition of that type can be added</li>
      </ul>
      <li>Clicking the "Remove"- button will delete only the current Link Relation</li>
    </ol>
    <li>Create a Query Parameter</li>
    <ol>
      <li>Click the "Add"- button under "Query Parameters"- header</li>
      <ul>
        <li>This will close all open Link Relations, Query Parameters or Responses for that Method</li>
      </ul>
      <li>Give the Query Parameter a Name, Description and an Example</li>
      <li>Select the Type of the Query Parameter from the dropdown list</li>
      <li>Just like Link Relations, single Query Parameters can be removed with the "Remove"- button</li>
    </ol>
    <li>Create a Response</li>
    <ol>
      <li>Click the "Add"- button below the "Responses"- header</li>
      <ol>
        <li>Select the Status Code for the Response</li>
        <li>Give the Response a Name and Description</li>
        <li>Entity lets you connect the Response- object to an Entity</li>
        <ul>
          <li>Selecting "Create new Entity" in the dropdown box will let you create a new Entity</li>
          <li>When you have formerly created Entities, they will all show in the dropdown box, and any of them can be linked to the Response</li>
        </ul>
        <li>Also individual Responses can be deleted with the "Remove"- button</li>
      </ol>
    </ol>
  </ol>
</div>

<div class="panel panel-primary" id="pnlh3">
  <h3>Entities & Properties</h3>
  <ol start="7">
    <li>To create a new Entity, click the "Add"- button next to Entities in the Sidebar</li>
    <ul>
      <li>Entities can also be created through a Response, as explained above</li>
    </ul>
    <ol>
      <li>Give the Entity a name and description</li>
      <li>If the Entity is defined outside of this application, check the checkbox "External" and fill in the URL where the definition can be found</li>
      <li>Select the Formats that this Entity supports</li>
      <ul>
        <li>More than one Format can be chosen</li>
        <li>In order to choose more than one, please hold down the Ctrl- or Shift- keys while clicking the Format</li>
      </ul>
      <li>Removing an Entity will also remove all of its Properties and linking to Responses</li>
    </ol>
    <li>Create a Property</li>
    <ol>
      <li>Click the "Add"- button next to Properties- header in Entity</li>
      <li>Give the Property a Name and Description</li>
      <li>Finally, select the Type from a dropdown- list</li>
      <li>Single Properties can be removed with the "Remove"- button</li>
    </ol>
  </ol>
 </div>

<div class="panel panel-primary" id="pnlh4">
  <h3>Downloading a Swagger File & Some Tips</h3>
  <ol start="9">
    <li>Once the API is finished, you can export it by downloading a Swagger- file</li>
    <ol>
      <li>Click the "Download Swagger File"- button in the top Navigation bar</li>
      <li>Save the file on your computer</li>
    </ol>
    <li>Tips</li>
    <ul>
      <li>All the data is saved in LocalStorage on your browser</li>
      <ul>
        <li>Everything is automatically saved whenever something changes. You will see a green icon with the text "Saved" at the bottom of the page after each save</li>
        <li>Therefore, you can close the application at any time, and continue later from where you were</li>
      </ul>
      <li>A single API can contain several Resources, Methods, Responses, Entities, and so on</li>
    </ul>
  </ol>
</div>